const TelegramApi = require("node-telegram-bot-api")
const {gameOptions, againOptions} = require("./options")
const token = '1871160679:AAGtgtHOlPaVuc8jL8cueOzRNc8awlURXvw'
require('https').createServer().listen(process.env.PORT || 5000).on('request', function(req, res){
    res.end('')
});

const bot = new TelegramApi(token, {polling: true})

const chats = {}

const startGame = async(chatId) => {
    await bot.sendMessage(chatId, `–Ø –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9.`)
    const randomNumber = Math.floor(Math.random() * 10)
    chats[chatId] = randomNumber
    await bot.sendMessage(chatId, '–£–≥–∞–¥–∞–π!', gameOptions)
}

const start = () => {
    bot.setMyCommands([
        {command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
        {command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ'},
        {command: '/game', description: '–°—ã–≥—Ä–∞—Ç—å  –≤ –∏–≥—Ä—É'},
    ])
    bot.on('message', async msg => {
        console.log(msg)
        const text = msg.text
        const chatId = msg.chat.id
        const helloSticker = 'https://tlgrm.ru/_/stickers/9a5/3d6/9a53d66b-53c8-3ccb-a3dd-75fa64c18322/42.webp'
        switch (text) {
            case '/start':
                msg.from.first_name
                    ? await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ${msg.from.first_name}üëã! \n–ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?`)
                    : await bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –æ—Ç –∞–≤—Ç–æ—Ä–∞ Breazzz \n–ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?`)
                await bot.sendSticker(chatId, helloSticker)
                break
            case '/info':
                await bot.sendMessage(chatId, `–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µüëÄ\n\n–ò–º—è: ${msg.from.first_name ? msg.from.first_name : '–ü—É—Å—Ç–æ'}\n–§–∞–º–∏–ª–∏—è: ${msg.from.last_name ? msg.from.last_name : '–ü—É—Å—Ç–æ'}\n–ù–∏–∫–ù–µ–π–º: ${msg.from.username ? msg.from.username : '–ü—É—Å—Ç–æ'}`)
                break
            case '/game':
                return startGame(chatId)
            default:
                await bot.sendMessage(chatId, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑)')
                break
        }
    })
    bot.on('callback_query', async msg => {
        const data = msg.data
        const chatId = msg.message.chat.id
        if (data === '/again') {
            return startGame(chatId)
        }
        if (data == chats[chatId]) {
            return bot.sendMessage(chatId, `${data}? –•–º, –ö—Ä–∞—Å–∞–≤–∞! –í–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ–∂–æ–∫`, againOptions)
        } else {
            return bot.sendMessage(chatId, `${data}? –ò–¥–∏ –ø–æ—Å–ø–∏.\n–ú–æ—è —Ü–∏—Ñ—Ä–∞: ${chats[chatId]}`, againOptions)
        }
    })
}

start()